'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));

class SoundVisualizer extends React.Component{constructor(a){super(a),this.state={circleRadius:SoundVisualizer.getRadiusFromProps(a),maxBarSize:SoundVisualizer.getMaxBarSize(a)},this.canvas=React.createRef(),this.spectrum=new Uint8Array(a.fftSize/2),this.audioCtx=new AudioContext,this.processSound=this.processSound.bind(this),this.draw=this.draw.bind(this);}componentDidMount(){const a=this.props.fftSize;this.analyser=this.audioCtx.createAnalyser(),this.analyser.fftSize=a,this.analyser.smoothingTimeConstant=.6,this.processSound(this.props.soundStream),requestAnimationFrame(this.draw);}static getDerivedStateFromProps(a){return {circleRadius:SoundVisualizer.getRadiusFromProps(a),maxBarSize:SoundVisualizer.getMaxBarSize(a)}}componentDidUpdate(){this.analyser.fftSize=this.props.fftSize,this.processSound(this.props.soundStream);}componentWillUnmount(){this.analyser&&0<this.analyser.numberOfInputs&&this.analyser.disconnect(),this.audioCtx&&this.audioCtx.close(),this.analyser=null,this.audioCtx=null;}static distributeAngles(a,b){var c=Math.PI;return 2*(a/b)*c+c/3}static getRadiusFromProps(a){return Math.min(a.width,a.height)*a.ratio/2}static getMaxBarSize(a){return Math.min(a.width,a.height)*(1-a.ratio)/2}processSound(a){const b=this.props,c=b.width,d=b.height,e=this.state.circleRadius,f=this.analyser.frequencyBinCount;this.particles=Array(f).fill({}).map((a,b)=>{const g=SoundVisualizer.distributeAngles(b,f/2);return {x:c/2+Math.cos(g)*e,y:d/2+Math.sin(g)*e,angle:g}});const g=this.audioCtx.createMediaStreamSource(a);g.connect(this.analyser);}draw(){const a=this.props,b=a.width,c=a.height,d=a.lineWidth,e=this.state,f=e.maxBarSize,g=e.circleRadius;if(this.analyser&&0<this.analyser.numberOfInputs){this.analyser.getByteFrequencyData(this.spectrum);const a=this.analyser.frequencyBinCount,e=this.canvas.current.getContext("2d");e.clearRect(0,0,b,c),e.fillStyle="#ff7f27",e.strokeStyle="#ff7f27",e.lineWidth=d||1;let i,j,k,l=0;for(var h=0;h<a;h++){l+=this.spectrum[h]*this.spectrum[h],i=this.spectrum[h]/256*f;const a=this.particles[h];j=b/2+Math.cos(a.angle)*(i+g),k=c/2+Math.sin(a.angle)*(i+g),e.beginPath(),e.moveTo(a.x,a.y),e.lineTo(j,k),e.stroke(),e.closePath();}l/=a,l=Math.sqrt(l),l/=256,this.drawLogo(e,l);}requestAnimationFrame(this.draw);}drawLogo(a,b){var c=Math.asin,d=Math.cos,e=Math.PI;const f=this.props,g=f.width,h=f.height,i=this.state.circleRadius,j=g/2,k=h/2,l=i/3;[a=>{a.moveTo(j-i/3,k+i/2),a.lineTo(j+i/3,k+i/2);},a=>{a.moveTo(j,k+i/2),a.lineTo(j,k+i/3);},a=>{a.arc(j,k,i/3,0,Math.PI);},a=>{a.arc(j,k,l,0,Math.PI),a.moveTo(j+l,k-l),a.lineTo(j+l,k),a.arc(j,k-l,l,0,Math.PI,!0),a.moveTo(j-l,k-l),a.lineTo(j-l,k);}].forEach(b=>{a.beginPath(),b(a),a.stroke(),a.closePath();});const m=Math.floor(i*b);if(!(1>m))if(m<l){const b=(l-m)/l,f=c(b),g=d(f);a.beginPath(),a.arc(j,k,l,f,e-f),a.lineTo(j+g*l,k+b*l),a.closePath(),a.fill();}else if(m<2*l){const b=m-l;a.beginPath(),a.arc(j,k,l,0,Math.PI),a.lineTo(j-l,k-b),a.lineTo(j+l,k-b),a.lineTo(j+l,k),a.closePath(),a.fill();}else{const b=(l-(m-2*l))/l,f=c(b),g=d(f);a.beginPath(),a.arc(j,k,l,0,Math.PI),a.lineTo(j-l,k-l),a.arc(j,k-l,l,Math.PI,e+f),a.lineTo(j+g*l,k-l-b*l),a.arc(j,k-l,l,2*e-f,2*e),a.lineTo(j+l,k),a.closePath(),a.fill();}}render(){return React.createElement("canvas",{width:this.props.width,height:this.props.height,ref:this.canvas})}}

module.exports = SoundVisualizer;
//# sourceMappingURL=index.min.js.map
